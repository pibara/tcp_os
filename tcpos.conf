# Passive OS Fingerprinting config file.
#
#
# This part of the configuration determines the numbers for the fuzzy stuff

FZY	TTL		LIKELY		10	# How much point does a likely ttl match get
FZY	TTL		POSSIBLE	6	# How much points does a possible ttl match get
FZY	TTL		UNLIKELY	2	# How much points does a unlikely ttl match get
FZY	TTL		DEFAULT		-20	# How much is the default for non matchn ttl
FZY	SLOWSTART	YESYES		5	# This slowstart analisis does not work yet
FZY	SLOWSTART	YESNO		-20
FZY	SLOWSTART	NOYES		-2
FZY	SLOWSTART	NONO		2
FZY	SLOWSTART	DEFAULT		0	
FZY	WINDOW		FULL		10	# How much points does a single value window match add
FZY	WINDOW		RANGE		7	# How much points does a match on a window range add
FZY	WINDOW		DEFAULT		-20	# How much is the default if the window does not match
# Passive OS Fingerprints:
#
# Pasive OS fingerprinting is a rather fussy peice of analisis, it is based
# on default parameters set for protocol options and fields.
# Most are however changable by administrators, or are not exclusive for one
# OS+Version, by combining a few simple rating tests however it may be possible
# to guesse the most likely OS. These tests may return either a likelyness number
# for each OS, or a disqualifiing -1 value. Currently the combination of the IP
# TTL field combined with the TCP window behaviour seems to result in a reasonable
# guese.
#
# IP TTL field:
# 
# The IP-TTL is set to a initial value by the originating endpoint that is
# decremented at each hop, without knowledge of the amounth of hopt
# traversed any information that can be gathered must be done so based
# on a statistically sound change of the number of hops that may have been
# traversed. Esspecialy the lower range of TTL values may belong to
# different initial values. Interception mostly does not take place on any
# of the first hops, or if it does the amounth of data will be so big that
# higher level protocols will surely reveal the OS. Further the total
# amounth of hops rarely exeeds the total of 30 hops, combined with the
# first assumption we should reach statistically sound results assuming
# that in between 2 and 28 hops have been passed. Zero or one hops may
# be possible if the interception point is close to the hosts, more than
# 30 hops is unlikely, where the unlikelyness increases with the number of hops.
# A end to end hopcount of 64 or more is discarded as although theoretically
# possible beeing practically not possible. 
# Further, as long as there is no OS to fill a gap the possible range is extended
# to fill the gap, as it is unlikely to be anything else for now.
#
# The most commanly used TTL values are: 30,32,54,59,60,64,128 and 255
# Based on these numbers and the 2..28 assumption the following table can be
# constructed. If other initial values are detected in now unlisted OSses or
# OS versions, the table and following config table should be revices accordingly.
#
#	Initial		Likely		Possible	Unlikely
#	30		2 .. 28		1,29,30
#	32		4 .. 30		2,3,31,32	1
#	54		26 .. 52	24,25,53,54	1 .. 23
#	59		31 .. 57	29,30,58,59	1 .. 28
#	60		32 .. 58	30,31,59,60	1 .. 29		
#	64		36 .. 62	34,35,63,64	1 .. 33
#	128		100 .. 126	65..99,127,128	-	
#	255		227 .. 253	129..226,254,255
# In order to extract the possible starting TTL the following 
# configuration entry table is constructed from this:
#	START	END	LIKELY		POSSIBLE	UNLIKELY
TTL	1	1	-		30		32,54,59,60,64
TTL	2	3	30		32		54,59,60,64
TTL	4	23	30,32		-		54,59,60,64		
TTL	24	25	30,32		54		59,60,64		
TTL	26	26	30,32		-		59,60,64		
TTL	27	28	30,32,54	-		59,60,64
TTL	29	29	32,54		30,59		60,64
TTL	30	30	32,54		30,59,60	64
TTL	31	31	54,59		32,60		64 
TTL	32	32	54,59,60	32		64
TTL	33	33	54,59,60	-		64
TTL	34	35	54,59,60	64		-
TTL	36	52	54,59,60,64	-		-
TTL	53	54	59,60,64	54		-
TTL	55	57	59,60,64	-		-
TTL	58	58	60,64		59		-
TTL	59	59	64		59,60		-
TTL	60	60	64		60		-
TTL	61	62	64		-		-
TTL	63	64	-		64		-
TTL	65	99	-		128		-
TTL	100	126	128		-		-
TTL	127	128	-		128		-
TTL	129	226	-		255		-
TTL	227	253	255		-		-
TTL	254	255	-		255		-
# Next to the IP TTL, the window size of the tcp session and the fact if the window size stays
# constant during the session, or starst small and grows a bit can help to find the operating
# system.

# Operating system TTL and window size values:
# 	OS		Version		Platform	TTL	Window1	Window2	Slowstart
OS	AIX		4.3.x		IBM/RS6000	60	16000	16100	-1
OS	AIX		4.2.x		IBM/RS6000	60	16000	16100	-1
OS	BSDI		BSD/OS		x		64	8760	8760	-1
OS	BSDI		BSD/OS		x		64	8576	8576	-1
OS	BSDI		BSD/OS		x		64	8736	8736	-1
OS	BSDI		BSD/OS		x		64	8192	8192	-1
OS	Cisco		11.2		7507		60	65535	65535	-1
OS	Cisco		12.0		2514		255	3800	5000	-1
OS	Cisco		Localdir	OS/2		64	16720	16720	-1
OS	DC-OSx		1.1-95		Pyramid/NILE	30	8192	8192	-1
OS	DigitalUnix	4.0		Alpha		60	33580	33580	-1
OS	FreeBSD		x		Intel		64	16384	16384 	-1
OS	FreeBSD		x		Intel		64	17520	17520 	-1
OS	FreeBSD		x		Intel		64	17376	17376 	-1
OS	FTX(UNIX)	3,3		STRATUS		64	32768	32768	-1
OS	HPJetDirect	?		HP_Printer	59	2100	2150	-1
OS	IRIX		6.2-6.5		SGI		60	61320	61320	-1
OS	IRIX		6.2-6.5		SGI		64	61320	61320	-1
OS	IRIX		6.2-6.5		SGI		64	60816	60816	-1
OS	IRIX		6.2-6.5		SGI		64	49152	49152	-1
OS	IRIX		5.1-5.3		SGI		64	61000	61000	-1
OS	JetDirect	G.07.x		J3113A		64	5804	5840	-1
OS	Linux		2.2.x		Intel		64	32120	32120	-1
OS	Linux		2.2.x		Intel		64	30660	30660	-1
OS	Linux		2.2.x		Intel		64	31728	31728	-1
OS	Linux		2.2.x		Intel		64	31680	31680	-1
OS	Linux		2.0.x		Intel		64	33580	33580	-1
OS	Linux		2.0.x		Intel		64	32736	32736	-1
OS	Linux		2.0.x		Intel		64	2920	2920	-1
OS	NetApp		OnTap		5.1.2-5.2.2	54	8760	8760	-1
OS	Netware		4.11		Intel		128	32000	32768	-1
OS	OpenBSD		2.x		Intel		64	17500	17500	-1
OS	OpenBSD		2.x		Intel		64	17520	17520	-1
OS	OpenBSD		2.x		Intel		64	17376	17376	-1
OS	OS390		2.6		IBM/S390	60	32756	32756	-1
OS	OS/400		R4.4		AS/400		64	8192	8192	-1
OS	Reliant		5.43		Pyramid/RM1000	60	65534 	65534 	-1
OS	SCO		UNIXWARE/2.2.1	X		64	4096	4096	-1
OS	SCO		OPENSERVER/5.0	Compaq		64	24820	24820	-1
OS	Solaris		2.x		Intel/Sparc	255	9000	9000	-1
OS	Solaris		2.x		Intel/Sparc	255	8760	8760	-1
OS	Solaris		2.x		Intel/Sparc	255	9216	9216	-1
OS	Solaris		2.x		Intel/Sparc	255	10136	10136	-1
OS	Solaris		2.x		Intel/Sparc	255	34752	34752	-1
OS	Solaris		2.x		Intel/Sparc	255	65160	65160	-1
OS	Solaris		2.x		Intel/Sparc	255	64240	64240	-1
OS	Solaris		2.x		Intel/Sparc	255	65535	65535	-1
OS	Solaris		8		Intel/Sparc	64	24820	24820	-1
OS	TRU64		5.0		X		64	33232	33232	-1
OS	Unisys		x		Mainframe	64	32768	32768	-1
OS	VMS/Multinet	4.2		x		64	6144	6144	-1
OS	Windows		9x/NT(3.x)	Intel		32	8760	8760	-1
OS	Windows		9x/NT(3.x)	Intel		32	8592	8592	-1
OS	Windows		9x/NT(3.x)	Intel		32	8576	8576	-1
OS	Windows		9x/NT(3.x)	Intel		32	5000	5000	-1
OS	Windows		9x/NT(4.x)	Intel		128	5000	9000	-1
OS	Windows		2000		Intel		128	16550	18000	-1

# In order to determine the most likely match between different equanly matching operating systems
# it is handy to maintain a list of OS ocurrence, it is more likely that the more occurring OS
# is the best guese than some obscure OS with a small userbase. In order to acomplish this a
# list of frequent OSses is maintained. All operating systems not in this list get a 0.
FREQ	Windows		10
FREQ	Linux		9
FREQ	FreeBSD		8
FREQ	Solaris		7
FREQ	OpenBSD		6
FREQ	BSDI		5
FREQ	Cisco		4
FREQ	TRU64		3
FREQ	OS/400		2
FREQ	SCO		1
